<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

       <import resource="spring-mybatis.xml"/>

       <context:annotation-config />

       <!--<task:annotation-driven />-->

       <context:component-scan base-package="com.demo.config"/>
       <context:component-scan base-package="com.demo.service"/>
       <context:component-scan base-package="com.demo.util"/>

       <bean id="timeLogInterceptor" class="com.demo.interceptor.TimeLogInterceptor"></bean>

       <aop:config>
              <aop:pointcut id="control" expression="execution(* com.demo.service..*.*(..))"/>
              <aop:advisor advice-ref="timeLogInterceptor" pointcut-ref="control"/>
       </aop:config>

       <!--<bean id="exAspect" class="com.demo.interceptor.ExceptionLogAspect" />-->

       <!-- <aop:config>
               <aop:aspect ref="exAspect">
                      &lt;!&ndash; 切入点 &ndash;&gt;
                      <aop:pointcut id="control2" expression="execution(* com.demo.service..*.*(..))"/>
                      &lt;!&ndash;<aop:after-throwing method="afterThrowing" throwing="ex" pointcut-ref="control2" />&ndash;&gt;
               </aop:aspect>
        </aop:config>-->
       <!-- 定时器配置
        task:executor/@pool-size：可以指定执行线程池的初始大小、最大大小
        task:executor/@queue-capacity：等待执行的任务队列的容量
        task:executor/@rejection-policy：当等待队已满时的策略，分为丢弃、由任务执行器直接运行等方式
       -->
      <!-- <task:scheduler id="scheduler" pool-size="10" />
       <task:executor id="executor" keep-alive="3600" pool-size="100-200"
                      queue-capacity="500" rejection-policy="CALLER_RUNS" />
       <task:annotation-driven executor="executor" scheduler="scheduler"/>-->

       <bean id="jedidProxy" class="com.demo.proxy.JedisProxy">
              <constructor-arg name="redisAddr" value="${redis.addr}" />
              <constructor-arg name="port" type="java.lang.Integer" value="${redis.port}" />
              <constructor-arg name="password" value="${redis.password}" />
       </bean>

</beans>